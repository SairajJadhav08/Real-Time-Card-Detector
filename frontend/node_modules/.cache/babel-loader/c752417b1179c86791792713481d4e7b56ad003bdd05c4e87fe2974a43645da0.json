{"ast":null,"code":"import _objectSpread from\"C:/Users/Asus/OneDrive/Desktop/card/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect,useCallback}from'react';import axios from'axios';const API_BASE_URL='http://localhost:8000';export const useDetectionHistory=()=>{const[history,setHistory]=useState([]);const[totalCount,setTotalCount]=useState(0);const[filteredCount,setFilteredCount]=useState(0);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[lastFilter,setLastFilter]=useState();const fetchHistory=useCallback(async filter=>{setLoading(true);setError(null);try{var _data$detections;const response=await axios.get(\"\".concat(API_BASE_URL,\"/api/history\"),{params:filter,timeout:10000});const data=response.data;setHistory(data.detections||[]);setTotalCount(data.total_count||0);setFilteredCount(data.filtered_count||((_data$detections=data.detections)===null||_data$detections===void 0?void 0:_data$detections.length)||0);setLastFilter(filter);}catch(err){console.error('Failed to fetch detection history:',err);if(axios.isAxiosError(err)){var _err$response;if(err.code==='ECONNABORTED'){setError('Request timeout. Please check your connection.');}else if(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===404){setError('History endpoint not found. Please check the server.');}else if(err.response&&err.response.status>=500){setError('Server error. Please try again later.');}else{var _err$response2,_err$response2$data;setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||'Failed to fetch history');}}else{setError('Network error. Please check your connection.');}}finally{setLoading(false);}},[]);const addDetection=useCallback(detection=>{const newDetection=_objectSpread(_objectSpread({},detection),{},{id:Date.now(),// Temporary ID\ntimestamp:new Date().toISOString()});setHistory(prev=>[newDetection,...prev]);setTotalCount(prev=>prev+1);setFilteredCount(prev=>prev+1);},[]);const clearHistory=useCallback(async()=>{setLoading(true);setError(null);try{await axios.delete(\"\".concat(API_BASE_URL,\"/api/history\"),{timeout:10000});setHistory([]);setTotalCount(0);setFilteredCount(0);}catch(err){console.error('Failed to clear history:',err);if(axios.isAxiosError(err)){if(err.code==='ECONNABORTED'){setError('Request timeout. Please try again.');}else{var _err$response3,_err$response3$data;setError(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||'Failed to clear history');}}else{setError('Network error. Please check your connection.');}}finally{setLoading(false);}},[]);const exportHistory=useCallback(async(format,filter)=>{setError(null);try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/api/export\"),{format,filter:filter||lastFilter},{responseType:'blob',timeout:30000});// Create download link\nconst blob=new Blob([response.data]);const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;// Generate filename with timestamp\nconst timestamp=new Date().toISOString().split('T')[0];link.download=\"card_detections_\".concat(timestamp,\".\").concat(format);// Trigger download\ndocument.body.appendChild(link);link.click();document.body.removeChild(link);// Cleanup\nwindow.URL.revokeObjectURL(url);}catch(err){console.error('Failed to export history:',err);if(axios.isAxiosError(err)){if(err.code==='ECONNABORTED'){setError('Export timeout. Please try again with fewer records.');}else{var _err$response4,_err$response4$data;setError(((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.message)||'Failed to export history');}}else{setError('Network error. Please check your connection.');}}},[lastFilter]);const refreshHistory=useCallback(async()=>{await fetchHistory(lastFilter);},[fetchHistory,lastFilter]);// Auto-fetch initial history\nuseEffect(()=>{fetchHistory({limit:50});},[fetchHistory]);// Auto-refresh every 30 seconds if no filter is applied\nuseEffect(()=>{if(!lastFilter||Object.keys(lastFilter).length<=1){const interval=setInterval(()=>{refreshHistory();},30000);return()=>clearInterval(interval);}},[refreshHistory,lastFilter]);return{history,totalCount,filteredCount,loading,error,fetchHistory,addDetection,clearHistory,exportHistory,refreshHistory};};export default useDetectionHistory;","map":{"version":3,"names":["useState","useEffect","useCallback","axios","API_BASE_URL","useDetectionHistory","history","setHistory","totalCount","setTotalCount","filteredCount","setFilteredCount","loading","setLoading","error","setError","lastFilter","setLastFilter","fetchHistory","filter","_data$detections","response","get","concat","params","timeout","data","detections","total_count","filtered_count","length","err","console","isAxiosError","_err$response","code","status","_err$response2","_err$response2$data","message","addDetection","detection","newDetection","_objectSpread","id","Date","now","timestamp","toISOString","prev","clearHistory","delete","_err$response3","_err$response3$data","exportHistory","format","post","responseType","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","split","download","body","appendChild","click","removeChild","revokeObjectURL","_err$response4","_err$response4$data","refreshHistory","limit","Object","keys","interval","setInterval","clearInterval"],"sources":["C:/Users/Asus/OneDrive/Desktop/card/frontend/src/hooks/useDetectionHistory.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\ninterface Detection {\n  id: number;\n  rank: string;\n  suit: string;\n  confidence: number;\n  timestamp: string;\n  card_name?: string;\n}\n\ninterface HistoryFilter {\n  start_date?: string;\n  end_date?: string;\n  rank?: string;\n  suit?: string;\n  min_confidence?: number;\n  limit?: number;\n}\n\ninterface DetectionHistory {\n  detections: Detection[];\n  total_count: number;\n  filtered_count: number;\n}\n\ninterface UseDetectionHistoryReturn {\n  history: Detection[];\n  totalCount: number;\n  filteredCount: number;\n  loading: boolean;\n  error: string | null;\n  fetchHistory: (filter?: HistoryFilter) => Promise<void>;\n  addDetection: (detection: Omit<Detection, 'id' | 'timestamp'>) => void;\n  clearHistory: () => Promise<void>;\n  exportHistory: (format: 'json' | 'csv', filter?: HistoryFilter) => Promise<void>;\n  refreshHistory: () => Promise<void>;\n}\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nexport const useDetectionHistory = (): UseDetectionHistoryReturn => {\n  const [history, setHistory] = useState<Detection[]>([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const [filteredCount, setFilteredCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [lastFilter, setLastFilter] = useState<HistoryFilter | undefined>();\n\n  const fetchHistory = useCallback(async (filter?: HistoryFilter) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await axios.get<DetectionHistory>(`${API_BASE_URL}/api/history`, {\n        params: filter,\n        timeout: 10000\n      });\n      \n      const data = response.data;\n      setHistory(data.detections || []);\n      setTotalCount(data.total_count || 0);\n      setFilteredCount(data.filtered_count || data.detections?.length || 0);\n      setLastFilter(filter);\n    } catch (err) {\n      console.error('Failed to fetch detection history:', err);\n      if (axios.isAxiosError(err)) {\n        if (err.code === 'ECONNABORTED') {\n          setError('Request timeout. Please check your connection.');\n        } else if (err.response?.status === 404) {\n          setError('History endpoint not found. Please check the server.');\n        } else if (err.response && err.response.status >= 500) {\n          setError('Server error. Please try again later.');\n        } else {\n          setError(err.response?.data?.message || 'Failed to fetch history');\n        }\n      } else {\n        setError('Network error. Please check your connection.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const addDetection = useCallback((detection: Omit<Detection, 'id' | 'timestamp'>) => {\n    const newDetection: Detection = {\n      ...detection,\n      id: Date.now(), // Temporary ID\n      timestamp: new Date().toISOString()\n    };\n    \n    setHistory(prev => [newDetection, ...prev]);\n    setTotalCount(prev => prev + 1);\n    setFilteredCount(prev => prev + 1);\n  }, []);\n\n  const clearHistory = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      await axios.delete(`${API_BASE_URL}/api/history`, {\n        timeout: 10000\n      });\n      \n      setHistory([]);\n      setTotalCount(0);\n      setFilteredCount(0);\n    } catch (err) {\n      console.error('Failed to clear history:', err);\n      if (axios.isAxiosError(err)) {\n        if (err.code === 'ECONNABORTED') {\n          setError('Request timeout. Please try again.');\n        } else {\n          setError(err.response?.data?.message || 'Failed to clear history');\n        }\n      } else {\n        setError('Network error. Please check your connection.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const exportHistory = useCallback(async (format: 'json' | 'csv', filter?: HistoryFilter) => {\n    setError(null);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/export`, {\n        format,\n        filter: filter || lastFilter\n      }, {\n        responseType: 'blob',\n        timeout: 30000\n      });\n      \n      // Create download link\n      const blob = new Blob([response.data]);\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      \n      // Generate filename with timestamp\n      const timestamp = new Date().toISOString().split('T')[0];\n      link.download = `card_detections_${timestamp}.${format}`;\n      \n      // Trigger download\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      // Cleanup\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error('Failed to export history:', err);\n      if (axios.isAxiosError(err)) {\n        if (err.code === 'ECONNABORTED') {\n          setError('Export timeout. Please try again with fewer records.');\n        } else {\n          setError(err.response?.data?.message || 'Failed to export history');\n        }\n      } else {\n        setError('Network error. Please check your connection.');\n      }\n    }\n  }, [lastFilter]);\n\n  const refreshHistory = useCallback(async () => {\n    await fetchHistory(lastFilter);\n  }, [fetchHistory, lastFilter]);\n\n  // Auto-fetch initial history\n  useEffect(() => {\n    fetchHistory({ limit: 50 });\n  }, [fetchHistory]);\n\n  // Auto-refresh every 30 seconds if no filter is applied\n  useEffect(() => {\n    if (!lastFilter || Object.keys(lastFilter).length <= 1) {\n      const interval = setInterval(() => {\n        refreshHistory();\n      }, 30000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [refreshHistory, lastFilter]);\n\n  return {\n    history,\n    totalCount,\n    filteredCount,\n    loading,\n    error,\n    fetchHistory,\n    addDetection,\n    clearHistory,\n    exportHistory,\n    refreshHistory\n  };\n};\n\nexport default useDetectionHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}